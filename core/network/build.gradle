plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

def androidID = rootProject.ext.androidID
def libs = rootProject.ext.libs

android {
    namespace 'com.wei.amazingtalker_recruit.core.network'
    compileSdk androidID.compileSdk

    defaultConfig {
        minSdk androidID.minSdk
        targetSdk androidID.targetSdk
        versionCode androidID.versionCode
        versionName androidID.versionName

        testInstrumentationRunner androidID.testInstrumentationRunner
    }


    buildTypes {
        debug {
            buildConfigField("String", "ServerUrl", "${AmazingTalkerServerUrl}")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "ServerUrl", "${AmazingTalkerServerUrl}")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

dependencies {
    // PublicLibs
    implementation libs.publicLibs.core
    coreLibraryDesugaring libs.publicLibs.desugar_jdk
    testImplementation libs.publicLibs.test

    // Okhttp Interceptor
    implementation libs.okhttpInterceptorLibs.core

    // Retrofit2
    implementation libs.retrofit2Libs.core

    // RetrofitKotlinxSerializationJson
    implementation libs.retrofitKotlinxSerializationJsonLibs.core

    // Hilt
    implementation libs.hiltLibs.core
    kapt libs.hiltLibs.compiler

    // Coroutines
    implementation libs.coroutinesLibs.core

    // KotlinxDatetime
    implementation libs.kotlinxDatetimeLibs.core

    // KotlinxSerializationJson
    implementation libs.kotlinxSerializationJsonLibs.core
}