plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
}

apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'org.jetbrains.kotlin.android.extensions'

def config = rootProject.ext

android {
    namespace 'com.wei.amazingtalker_recruit.feature.teacherschedule'
    compileSdk config.android.compileSdk

    defaultConfig {
        minSdk config.android.minSdk
        targetSdk config.android.targetSdk
        versionCode config.android.version
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
    androidExtensions {
        experimental = true
    }
}

dependencies {

    implementation project(path: ':core:network')
    implementation project(path: ':core:common')
    implementation project(path: ':core:data')

    // PublicLibs
    implementation config.libs.publicLibs.core
    coreLibraryDesugaring config.libs.publicLibs.desugar_jdk
    testImplementation config.libs.publicLibs.test
    testImplementation config.libs.publicLibs.androidtest

    // LifeCycle
    implementation config.libs.lifeCycleLibs.core

    // Navigation
    implementation config.libs.navigationLibs.core

    // Coroutines
    implementation config.libs.coroutinesLibs.core

    // Hilt
    implementation config.libs.hiltLibs.core
    kapt config.libs.hiltLibs.compiler

}