# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Ensure important default jvmargs aren't overwritten. See https://github.com/gradle/gradle/issues/19750
org.gradle.jvmargs=-Xmx4g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:+UseParallelGC -XX:MaxMetaspaceSize=1g

# Disables the use of the Gradle daemon, which is a background process for speeding up Gradle commands.
# With this set to false, a new Gradle process will be started for each build.
org.gradle.daemon=false

# Enables the parallel execution of tasks that do not depend on each other. This can speed up the overall build process.
org.gradle.parallel=true

# Sets the maximum number of worker processes that Gradle can use for executing tasks (e.g., compilation).
# Here, it is limited to 2 worker processes.
org.gradle.workers.max=2

# Disables the incremental compilation feature of Kotlin. With incremental compilation, only the changed source files get recompiled.
kotlin.incremental=false

# Determines how the Kotlin compiler runs. 'in-process' means the compiler runs inside the Gradle process, not as a separate process.
kotlin.compiler.execution.strategy=in-process

# Controls whether warnings in Kotlin code should be treated as errors during the compilation process.
# This setting is useful for CI environments where you might not want a build to fail just because of warnings.
# Set to true if you want to treat warnings as errors in your local setup.
warningsAsErrors=false