name: CICDTest

on:
  push:
    branches:
      - chore/ci_cd_test
      
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build all build type and flavor permutations
        run: ./gradlew assemble

      - name: Upload build outputs (APKs)
        uses: actions/upload-artifact@v3
        with:
          name: APKs
          path: '**/build/outputs/apk/**/*.apk'

      - name: Run local tests
        run: ./gradlew test

  test:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # Run local tests after screenshot tests to avoid wrong UP-TO-DATE. TODO: Ignore screenshots.
      - name: Run local tests
        if: always()
        run: ./gradlew test

      - name: Upload test results (XML)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: '**/build/test-results/test*UnitTest/**.xml'

  androidTest:
    needs: build
    runs-on: macOS-latest # enables hardware acceleration in the virtual machine
    timeout-minutes: 90
    strategy:
      matrix:
        api-level: [26, 30]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build AndroidTest apps
        run: ./gradlew packageDebug packageDebugAndroidTest --daemon

      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        continue-on-error: true
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          disable-animations: true
          disk-size: 6000M
          heap-size: 600M
          script: ./gradlew connectedDebugAndroidTest --daemon --profile

      - name: Upload Profiling Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: profiling-report-${{ matrix.api-level }}
          path: '**/build/reports/profile'

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports-${{ matrix.api-level }}
          path: '**/build/reports/androidTests'
